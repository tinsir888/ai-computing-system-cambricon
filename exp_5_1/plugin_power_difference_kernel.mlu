/*************************************************************************
 * Copyright (C) [2018] by Cambricon, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *************************************************************************/
// TODO：PowerDifference BCL单核实现
#define each_line 256
__mlu_entry__ void PowerDifferenceKernel(half* input1, half* input2, int pow, half* output, int len)
{
  if (taskId > 0) return;
  // TODO：循环条件判断
  int quotient = len / each_line;
  __bang_printf("pow:%d len:%d\n", pow, len);
  int rem = len % each_line;
  // TODO：内存申请
  __nram__ half input1_nram[each_line];
  __nram__ half input2_nram[each_line];
  // TODO：For循环计算
  if(rem){
    quotient++;
  }
  for (int i = 0; i < quotient; i++)
  {
    // TODO：拷入操作
    __memcpy(input1_nram, input1 + i * each_line, each_line * sizeof(half), GDRAM2NRAM);
    __memcpy(input2_nram, input2 + i * each_line, each_line * sizeof(half), GDRAM2NRAM);
    // TODO：实际计算部分
    __bang_sub(input1_nram, input1_nram, input2_nram, each_line);
    __memcpy(input2_nram, input1_nram, each_line * sizeof(half), NRAM2NRAM);
    for(int j = 0; j < pow - 1; j ++)
      __bang_mul(input1_nram, input1_nram, input2_nram, each_line);
    // TODO：结果拷出操作
    __memcpy(output + i * each_line, input1_nram, each_line * sizeof(half), NRAM2GDRAM);
  }
}
